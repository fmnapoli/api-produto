# This is a basic workflow to help you get started with Actions

name: CI-CD

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  CI:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: Docker Login
        # You may pin to the exact commit or the version.
        # uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
        uses: docker/login-action@v1.9.0
        with:
          # Username used to log against the Docker registry
          username: ${{secrets.DOCKERHUB_USER}}
          # Password or personal access token used to log against the Docker registry
          password: ${{secrets.DOCKERHUB_PWD}}
          
      - name: Build and push Docker images
        # You may pin to the exact commit or the version.
        # uses: docker/build-push-action@e1b7f96249f2e4c8e4ac1519b9608c0d48944a1f
        uses: docker/build-push-action@v2.4.0
        with:
          # Build's context is the set of files located in the specified PATH or URL
          context: ./src
          # Path to the Dockerfile
          file: ./src/Dockerfile
          push: true
          tags: |
            fmnapoli/api-bootcamp-produto:latest
            fmnapoli/api-bootcamp-produto:${{github.run_number}}

  CD:
    runs-on: ubuntu-latest
    needs: [CI]
    steps:
      - uses: actions/checkout@v2
      
#       - name: Kubernetes set context
#         uses: Azure/k8s-set-context@v1
#         with:
#           # Acceptable values: kubeconfig or service-account
#           method: kubeconfig
#           # Kubernetes Config
#           kubeconfig: ${{secrets.K8S_CONFIG}}

      - name: Get GKE Credentials
        # You may pin to the exact commit or the version.
        # uses: google-github-actions/get-gke-credentials@fb08709ba27618c31c09e014e1d8364b02e5042e
        uses: google-github-actions/get-gke-credentials@v0.2.1
        with:
          # Optional service account key to use for authentication to GKE. This should be the JSON
          # formatted private key which can be exported from the Cloud Console. The
          # value can be raw or base64-encoded.
          credentials: ${{secrets.GCP_CREDENTIALS}}
          # Name of the cluster to get credentials for.
          cluster_name: default
          # Location (Region/Zone) for the cluster.
          location: us-central1-c
          # Project ID where the cluster is deployed. If provided, this will override the project configured by gcloud.
          project_id: teste
          
      - name: Deploy MongoDB
        uses: Azure/k8s-deploy@v1.3
        with:
          manifests: |
            k8s/mongodb/deployment.yaml
            k8s/mongodb/service.yaml

    
